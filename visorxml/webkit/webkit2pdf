#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright (c) 2015 Ministerio de Fomento
#                    Instituto de Ciencias de la Construcci√≥n Eduardo Torroja (IETcc-CSIC)
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
"""webkit2pdf -f example.html -o out.pdf (on local)
DISPLAY=:1 webkit2pdf -f example.html -o out.pdf (on server)
"""

import os
import sys
import shutil
from optparse import OptionParser
from tempfile import mkdtemp

class Phantom2Pdf:
    def __init__(self, html_file, pdf_file, media_root='', static_root='', script_name=None ):
        self.in_file = os.path.abspath(html_file)
        self.out_file = os.path.abspath(pdf_file)
        self.cmd_dir = os.path.dirname(os.path.abspath(__file__))
        self.rasterize_js = os.path.join(self.cmd_dir, "rasterize.js")
        self.media_dir = media_root if media_root else os.path.abspath(os.path.join(self.cmd_dir, "..", "media"))
        self.static_dir = static_root if static_root else os.path.abspath(os.path.join(self.cmd_dir, "..", "static"))
        self.script_name = script_name if script_name else ''
        self.temp_dir = None

        self.create_workdir()

    def create_workdir(self):
        self.temp_dir = mkdtemp(prefix="webkit2pdf_")
        with open(self.in_file, "r") as in_fd:
            with open(os.path.join(self.temp_dir, "index.html"), "w") as out_fd:
                html = in_fd.read()
                html = html.replace(self.script_name + "/static/", "static/")
                html = html.replace(self.script_name + "/media/", "media/")
                out_fd.write(html)

        os.symlink(self.media_dir, os.path.join(self.temp_dir, "media"))
        os.symlink(self.static_dir, os.path.join(self.temp_dir, "static"))

    def exit(self):
        os.system("mkdir -p %s" % os.path.dirname(self.out_file))
        os.system("cp -a %s %s" % (os.path.join(self.temp_dir, "web.pdf"), self.out_file))
        shutil.rmtree(self.temp_dir)

    def save_pdf(self):
        in_path = os.path.join(self.temp_dir, "index.html")
        out_path = os.path.join(self.temp_dir, "web.pdf")
        os.system("phantomjs %s %s %s A4" % (self.rasterize_js, in_path, out_path))
        self.exit()


if __name__ == "__main__":
    parser = OptionParser()
    parser.add_option("-f", "--file", dest="file",
                      help="html file", metavar="FILE")
    parser.add_option("-o", "--out", dest="out",
                      help="output pdf file", metavar="OUT")
    parser.add_option("--mediaroot", dest="mediaroot",
                      default="",
                      help="media_root [default: %default]")
    parser.add_option("--staticroot", dest="staticroot",
                      default="",
                      help="static_root [default: %default]")
    parser.add_option("--scriptname", dest="scriptname",
                      default=None,
            help="script_name fragment [default: %default]")
    (options, args) = parser.parse_args()

    if options.out == None or options.file == None:
        parser.print_help()
        sys.exit(1)
    else:
        wk = Phantom2Pdf(options.file, options.out,
                media_root=options.mediaroot,
                static_root=options.staticroot,
                script_name=options.scriptname)
        wk.save_pdf()
